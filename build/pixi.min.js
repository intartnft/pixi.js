var Pixi;(()=>{"use strict";var e={d:(i,t)=>{for(var s in t)e.o(t,s)&&!e.o(i,s)&&Object.defineProperty(i,s,{enumerable:!0,get:t[s]})},o:(e,i)=>Object.prototype.hasOwnProperty.call(e,i)},i={};(()=>{e.d(i,{default:()=>x});class t{constructor(){this.r=0,this.g=0,this.b=0,this.a=0}static fromHex(e){let i=new t,h=s(e);return i.r=h[0],i.g=h[1],i.b=h[2],i.a=1,i}static fromRGBA(e,i,s,h){let o=new t;return o.r=e,o.g=i,o.b=s,o.a=h,o}format(){return"rgba("+this.r+","+this.g+","+this.b+","+this.a+")"}clone(){return t.fromRGBA(this.r,this.g,this.b,this.a)}}const s=e=>{let i;if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(e))return i=e.substring(1).split(""),3==i.length&&(i=[i[0],i[0],i[1],i[1],i[2],i[2]]),i="0x"+i.join(""),[i>>16&255,i>>8&255,255&i];throw new Error("Bad Hex")},h=t,o={},r=class{addListener(e,i,t){o[e]?o[e].push({block:t,listener:i}):o[e]=[{block:t,listener:i}]}removeListener(e){o=o.filter((i=>i.listener!=e))}fire(e,i){o[e]&&o[e].forEach((e=>{e.block(i)}))}},a={def:(e,i)=>e||i},l=a.def;const n=a.def,c=a.def,x={Color:h,Events:r,Scene:class{constructor(e){this.shapes=[],this.canvas=e.canvas,this.ctx=e.canvas.getContext("2d"),this.scenePixelSize=l(e.scenePixelSize,{width:50,height:50}),this.pixelSize=l(e.pixelSize,10),this.sceneOffset=l(e.sceneOffset,{x:0,y:0}),this.pointer=l(e.pointer,{x:0,y:0}),this.isStatic=l(e.isStatic,!1),this.backgroundColor=l(e.backgroundColor,"#ffffff"),this.minPixelSize=l(e.minPixelSize,2)}addShape(e){this.shapes.push(e)}addShapes(e){e.forEach((e=>{this.shapes.push(e)}))}centerShape(e){e.x=Math.floor(.5*this.scenePixelSize.width),e.y=Math.floor(.5*this.scenePixelSize.height)}centerShapes(e){e.forEach((e=>{e.x=Math.floor(.5*this.scenePixelSize.width),e.y=Math.floor(.5*this.scenePixelSize.height)}))}render(){this.clear(),this.shapes.forEach((e=>{e.image?this.drawImage(e):e.pixels&&this.drawPixels(e)}))}clear(){this.ctx.fillStyle=this.backgroundColor,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}fitInSize(e){e.width>e.height?this.pixelSize=Math.round(e.height/this.scenePixelSize.height):this.pixelSize=Math.round(e.width/this.scenePixelSize.width),this.pixelSize=Math.max(this.pixelSize,this.minPixelSize),this.sceneOffset.x=.5*(e.width-this.pixelSize*this.scenePixelSize.width),this.sceneOffset.y=.5*(e.height-this.pixelSize*this.scenePixelSize.height)}drawPixels(e){e.visible&&e.pixels.forEach((i=>{e.effects.forEach((e=>{e.render(i)}));let t=0,s=0;if(!this.isStatic){let i=2*(this.pointer.x/this.canvas.width-.5),h=2*(this.pointer.y/this.canvas.height-.5);t=i*e.pointerOffset,s=h*e.pointerOffset}this.ctx.globalCompositeOperation=e.blendMode,this.ctx.fillStyle=i.color.format(),this.ctx.globalAlpha=e.opacity;let h=this.sceneOffset.x+(i.x+e.x+t)*this.pixelSize,o=this.sceneOffset.y+(i.y+e.y+s)*this.pixelSize;h=Math.round(h/this.pixelSize)*this.pixelSize,o=Math.round(o/this.pixelSize)*this.pixelSize,this.ctx.fillRect(h,o,this.pixelSize,this.pixelSize),this.ctx.globalAlpha=1}))}drawImage(e){if(!e.visible)return;if(!e.image)return;let i=e.image;this.ctx.imageSmoothingEnabled=!1;let t=0,s=0;if(!this.isStatic){let i=2*(this.pointer.x/this.canvas.width-.5),h=2*(this.pointer.y/this.canvas.height-.5);t=i*e.pointerOffset,s=h*e.pointerOffset}this.ctx.globalCompositeOperation=e.blendMode,this.ctx.globalAlpha=e.opacity;let h=this.sceneOffset.x+(e.x+t)*this.pixelSize-i.width*this.pixelSize*.5,o=this.sceneOffset.y+(e.y+s)*this.pixelSize-i.height*this.pixelSize*.5;h=Math.round(h/this.pixelSize)*this.pixelSize,o=Math.round(o/this.pixelSize)*this.pixelSize,this.ctx.drawImage(i,0,0,i.width,i.height,h,o,i.width*this.pixelSize,i.height*this.pixelSize)}},Shape:class{constructor(e){this.visible=!0,this.opacity=1,this.blendMode="",this.pixels=[],this.effects=[],this.isReady=!1,this.events=new r,e&&this.parse(e)}addEffect(e){this.effects.push(e)}addEffects(e){e.forEach((e=>{this.effects.push(e)}))}parse(e){e.pixels?this.parseWithPixels(e):e.image&&this.parseWithImage(e)}parseWithPixels(e){this.rawObject=e;let i={min:{x:0,y:0},max:{x:0,y:0}};e.pixels.forEach((e=>{i.max.x=Math.max(i.max.x,e.x),i.max.y=Math.max(i.max.y,e.y),i.min.x=Math.min(i.min.x,e.x),i.min.y=Math.min(i.min.y,e.y)}));let t={x:Math.floor(.5*(i.max.x-i.min.x)),y:Math.floor(.5*(i.max.y-i.min.y))},s=[];e.pixels.forEach((i=>{let o,r=i.x-t.x,a=i.y-t.y;if(o=i.color instanceof h?i.color:h.fromHex(i.color),e.ignoreTransparentPixels&&0==o.a)return;let l={x:r,y:a,color:o};s.push(l)})),this.boundry=i,this.pixels=s,this.pointerOffset=e.pointerOffset,this.x=t.x,this.y=t.y,this.isReady=!0,this.events.fire("shapeIsReady",this)}parseWithImage(e){((e,i)=>{let t=new Image;t.onload=()=>{i(t)},t.src=e})(e.image,(i=>{if(e.pixelated)return e.pixels=(e=>{let i=document.createElement("canvas").getContext("2d");i.drawImage(e,0,0);let t=e.width,s=e.height,o=i.getImageData(0,0,t,s).data,r=[];for(var a=0;a<t;a+=1)for(var l=0;l<s;l+=1){let e=4*(l*t+a),i=o[e],s=o[e+1],n=o[e+2],c=o[e+3];r.push({x:a,y:l,color:h.fromRGBA(i,s,n,c)})}return r})(i),void this.parseWithPixels(e);this.image=i,this.boundry={min:{x:0,y:0},max:{x:i.width,y:i.height}},this.pointerOffset=e.pointerOffset,this.x=0,this.y=0,this.isReady=!0,this.events.fire("shapeIsReady",this)}))}},Utils:a,PixelColorChange:class{constructor(e,i){this.shape=e,this.smoothness=n(i.smoothness,.1),e.isReady?this.configure(e):e.events.addListener("shapeIsReady",this,(e=>{this.configure(e)}))}configure(e){e.pixels.forEach((e=>{e.colorChange={originalColor:e.color.clone(),targetColor:e.color.clone()}}))}render(e){if(!e.colorChange)return;let i=e.colorChange.targetColor;e.color.r+=Math.floor((i.r-e.color.r)*this.smoothness),e.color.g+=Math.floor((i.g-e.color.g)*this.smoothness),e.color.b+=Math.floor((i.b-e.color.b)*this.smoothness),e.color.a+=Math.floor((i.a-e.color.a)*this.smoothness)}},PixelDistort:class{constructor(e,i){this.shape=e,this.enabled=!1,this.configProvider=i,e.isReady?this.configure(e):e.events.addListener("shapeIsReady",this,(e=>{this.configure(e)}))}configure(e){e.pixels.forEach((e=>{let i=this.configProvider(e);e.distort={radius:c(i.radius,10),speed:c(i.speed,.01),smoothness:c(i.smoothness,.1),tick:c(i.tick,Math.random()*Math.PI*2),ox:e.x,oy:e.y}}))}render(e){let i=e.distort;if(i){if(this.enabled){let t=Math.sin(i.tick)*i.radius,s=Math.cos(i.tick)*i.radius;e.x+=(t-e.x)*i.smoothness,e.y+=(s-e.y)*i.smoothness}else e.x+=(e.distort.ox-e.x)*i.smoothness,e.y+=(e.distort.oy-e.y)*i.smoothness;i.tick+=i.speed}}}}})(),Pixi=i.default})();
//# sourceMappingURL=pixi.min.js.map